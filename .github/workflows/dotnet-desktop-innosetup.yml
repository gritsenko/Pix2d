# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Desktop windows innosetup release

on:
  workflow_dispatch:
  push:
    # Pattern matched against refs/tags
    tags:        
      - 'v*'           # Push events to every tag not containing /

env:
    Project_Path: Sources\PlatformHeads\Desktop\Pix2d.Desktop.Windows\Pix2d.Desktop.Windows.csproj                        # Replace with your solution name, i.e. MyWpfApp.sln.
    Output_Path: C:\tmp\pix2dAv
    InnoSetupPath: C:\Projects\pix2d\IntegrationScripts\build-setup.cmd

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v3
    #   with:
    #     dotnet-version: 7.0.x

    - name: Get version
      id: package_version
      uses: KageKirin/get-csproj-version@v0
      with:
        file: ${{ env:Project_Path }}

    - name: show version
      run: |
        echo v${{ steps.test.package_version.version }}

    # - name: Restore dependencies
    #   run: dotnet restore $env:Project_Path
    # - name: Build
    #   run: dotnet build --no-restore $env:Project_Path
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal $env:Project_Path
    
    # - name: clean output directory
    #   run: Remove-Item -Recurse -Force $env:Output_Path
      
    # - name: publish x64
    #   run: dotnet publish -c Release -r win-x64 -o $env:Output_Path $env:Project_Path
    
    # - name: Building the installer
    #   run: C:\Projects\pix2d\IntegrationScripts\build-setup.cmd
    #   shell: cmd

    # - name: Create Release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.RELEASE_REPO_SECRET }} # This token is provided by Actions, you do not need to create your own token
    #   run: |
    #     gh release create v3.1.4 "C:\tmp\pix2d_setup\pix2d_setup.exe" -R https://github.com/gritsenko/pix2d.com